{"version":3,"file":"vdoit.js.map","sources":["ng://vdoit/lib/user/auth.service.ts","ng://vdoit/lib/user/update.service.ts","ng://vdoit/lib/user/registration/registration.component.ts","ng://vdoit/lib/user/login/login.component.ts","ng://vdoit/lib/user/auth-guard.service.ts","ng://vdoit/lib/user/home/home.component.ts","ng://vdoit/lib/vdoit.module.ts"],"sourcesContent":["import { Router } from '@angular/router';\nimport * as firebase from 'firebase';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthService {\n  token: string;\n\n  constructor(private router: Router) {}\n\n  signupUser(email: string, password: string) {\n    firebase.auth().createUserWithEmailAndPassword(email, password)\n      .catch(\n        error => console.log(error)\n      )\n      .then(res=>{\n        console.log(res)\n      })\n  }\n\n  signinUser(email: string, password: string) {\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .then(\n        response => {\n          //console.log(response.user.uid)\n          this.router.navigate(['user/home/:'+ response.user.email]);\n          firebase.auth().currentUser.getIdToken()\n            .then(\n              (token: string) => this.token = token\n            )\n        }\n      )\n      .catch(\n        error => console.log(error)\n      );\n  }\n\n  logout() {\n    firebase.auth().signOut();\n    this.token = null;\n  }\n\n  getToken() {\n    firebase.auth().currentUser.getIdToken()\n      .then(\n        (token: string) => this.token = token\n      );\n    return this.token;\n  }\n\n  isAuthenticated() {\n    return this.token != null;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CountriesService {\r\n\r\n  url :string = \"https://raw.githubusercontent.com/sagarshirbhate/Country-State-City-Database/master/Contries.json\";\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  allCountries(): Observable<any>{\r\n    return this.http.get(this.url);\r\n  }\r\n}","//declare var finalize : any\nimport { Component, OnInit, Output } from '@angular/core';\nimport { FormBuilder,FormGroup ,Validators} from '@angular/forms'; \nimport {AuthService} from '../auth.service'\nimport { CountriesService} from '../update.service'\nimport {Router} from '@angular/router';\nimport { AngularFireStorage, AngularFireStorageReference, AngularFireUploadTask } from 'angularfire2/storage';\nimport {Observable} from 'rxjs'\nimport {  finalize } from 'rxjs/operators';\n\n\nimport { AngularFirestore} from '@angular/fire/firestore'\n\n\n@Component({\n  selector: 'enl-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\n\nexport class RegistrationComponent implements OnInit {\n\n  userForm : FormGroup;\n  loading = false;\n  submitted = false;\n  data;\n  stateInfo= [];\n  countryInfo = [];\n  cityInfo = [];\n  ref: AngularFireStorageReference;\n  task: AngularFireUploadTask;\n  uploadProgress: Observable<number>;\n  //downloadURL: Observable<string>;\n  uploadState: Observable<string>;\n  downloadURL : Observable<string>\n  selectCountry\n  selectCity\n  selectState\n  selectedCountry;\n  selectedState;\n    SelectedCity\n  url :string = \"https://raw.githubusercontent.com/sagarshirbhate/Country-State-City-Database/master/Contries.json\";\nimage\n  constructor(private afStorage: AngularFireStorage,private form: FormBuilder,private country:CountriesService,private db: AngularFirestore,private router : Router,private authService: AuthService)\n { }\n\n  ngOnInit() {\n      \n      this.userForm = this.form.group({\n        name: ['',[Validators.required]],\n        email: ['',[Validators.required,Validators.email]],\n        password: ['',[Validators.required,Validators.minLength(5)]],\n        organization:['',[Validators.required]],\n        uploadImage : ['',[Validators.required]],\n        selectCountry : ['',[Validators.required]],\n        selectState : ['',[Validators.required]],\n        selectCity : ['',[Validators.required]]\n      });\n      this.getCountries();  \n  }\n  get f() { return this.userForm.controls; }\n\n  upload(event) {\n    const id = Math.random().toString(36).substring(2);\n    this.ref = this.afStorage.ref(id);\n    this.task = this.ref.put(event.target.files[0]);\n    //this.uploadState = this.task.snapshotChanges().pipe(map(s => s.state));\n \n    this.uploadProgress = this.task.percentageChanges();\n   //this.downloadURL = this.task.downloadURL();\n   this.task.snapshotChanges().pipe(\n    finalize(() => {\n      this.downloadURL = this.ref.getDownloadURL()\n      this.downloadURL.subscribe(url => (this.image = url));\n    })\n  )\n  .subscribe();\n\n\n  }\n  getCountries(){\n    this.country.allCountries().\n    subscribe(\n      data2 => {\n        this.countryInfo=data2.Countries;\n        return this.countryInfo\n        //console.log('Data:', this.countryInfo);\n      },\n      err => console.log(err),\n      () => console.log('complete')\n    )\n  }\n\n  onChangeCountry(countryValue) {\n    this.stateInfo=this.countryInfo[countryValue].States;\n    this.cityInfo=this.stateInfo[0].Cities;\n    return this.stateInfo\n    //console.log(this.cityInfo);\n  }\n\n  onChangeState(stateValue) {\n    this.cityInfo=this.stateInfo[stateValue].Cities;\n    return this.cityInfo\n    //console.log(this.cityInfo);\n  }\n  login(){\n    this.router.navigate(['/login'])\n  }\n\n   onSubmit(){\n    this.submitted = true;\n\n\n        // stop here if form is invalid\n        if (this.userForm.invalid) {\n            return;\n        }\n        const email = this.userForm.value.email;\n        const password = this.userForm.value.password;\n        this.selectCountry = parseInt(this.userForm.value.selectCountry),\n        this.selectState=parseInt(this.userForm.value.selectState),\n        this.selectCity=parseInt(this.userForm.value.selectCity)\n\n        console.log(typeof(this.selectCountry));\n        console.log(this.country.allCountries());\n        this.country.allCountries().subscribe(data=>{\n          let country = data.Countries[this.selectCountry]\n          let state = country.States[this.selectState]\n          \n          this.selectedCountry = country.CountryName\n          this.selectedState = state.StateName\n          this.SelectedCity = state.Cities[this.selectCity]\n          console.log(this.selectedCountry)\n          console.log(this.selectedState)\n          console.log(this.SelectedCity)\n          var postt= async() =>{\n            const doc_ref=await this.db.collection('user').add({\n              \n             email:this.userForm.value.email,\n             //password:this.userForm.value.password,\n             name:this.userForm.value.name,\n             organization:this.userForm.value.organization,\n             uploadImage : this.image,\n             selectCountry : this.selectedCountry,\n             selectState:this.selectedState,\n             selectCity:this.SelectedCity,\n             \n             \n           })\n           this.authService.signupUser(email,password)\n           this.router.navigate(['/login'])\n           return doc_ref.id\n         }\n         postt().then(res=>\n           {\n             console.log(res)\n           })\n        })\n         this.loading = true;\n      \n            \n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,FormBuilder, Validators } from '@angular/forms'\nimport { AuthService } from '../auth.service';\nimport * as firebase from 'firebase'\n\n\n@Component({\n  selector: 'enl-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\nsigninForm : FormGroup\n  constructor(private form : FormBuilder,private auth:AuthService) { }\n\n  ngOnInit() {\n    this.signinForm = this.form.group({\n      email:['',Validators.required],\n      password : ['',Validators.required]\n    })\n    \n  }\n  onSubmit(){\n    const email = this.signinForm.value.email\n    const password = this.signinForm.value.password\n    this.auth.signinUser(email,password)\n    console.log(firebase.auth().currentUser.email)\n  }\n\n\n}\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    return this.authService.isAuthenticated();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService  } from '../auth.service'\nimport * as firebase from 'firebase';\nimport {Router} from '@angular/router'\nimport { AngularFirestore} from '@angular/fire/firestore'\n\n\n\n\n@Component({\n  selector: 'enl-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n user = firebase.auth().currentUser;\n url\n data;\n  constructor(private auth : AuthService , private router: Router, private db: AngularFirestore) { \n\n  }\n\n  ngOnInit() {\n  \n    this.url = this.router.url.slice(12)\n    //this.data = this.db.collection('user')\n    firebase.firestore().collection('user').onSnapshot((doc)=>{\n      //console.log(doc)\n      doc.forEach((docs) =>{\n        console.log(docs)\n        //console.log(doc);\n        this.data = docs.data();\n       // console.log(this.data())\n       console.log(this.data.uploadImage);\n        \n      })\n    \n\n    })\n    \n    //console.log(firebase.database().app)\n    // this.data.get().then(documentSnapshot => {\n    //   if (documentSnapshot.exists) {\n    //     console.log(documentSnapshot);\n    //   }\n    // });\n    \n\n  }\n  onLogOut(){\n    this.auth.logout();\n    this.router.navigate[('/')]\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common'\nimport { HttpClientModule} from '@angular/common/http'\nimport { AngularFireModule} from '@angular/fire'\nimport { AngularFireDatabaseModule} from '@angular/fire/database'\nimport { AngularFirestore} from '@angular/fire/firestore'\n\nimport { AngularFireAuth} from '@angular/fire/auth'\nimport { RegistrationComponent } from './user/registration/registration.component';\n//import { UpdateUserComponent } from './user/update-user/update-user.component';\nimport { environment } from './environment/environment';\nimport { CountriesService} from './user/update.service'\nimport { AngularFireStorageModule } from 'angularfire2/storage';\nimport { LoginComponent } from './user/login/login.component';\nimport { AuthService} from './user/auth.service';\nimport { HomeComponent } from './user/home/home.component'\nimport { AuthGuard } from './user/auth-guard.service';\nimport * as firebase from 'firebase';\n\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyCGPXlnA1hFVa1CeTSlOCwKEYsMypTTOSw\",\n  authDomain: \"vdoit-507fc.firebaseapp.com\",\n  databaseURL: \"https://vdoit-507fc.firebaseio.com\",\n  projectId: \"vdoit-507fc\",\n  storageBucket: \"vdoit-507fc.appspot.com\",\n  messagingSenderId: \"1049933201863\",\n  appId: \"1:1049933201863:web:618fb38251a368cf\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\n@NgModule({\n  declarations: [RegistrationComponent, LoginComponent, HomeComponent],\n  imports: [ReactiveFormsModule,\n    CommonModule ,\n    HttpClientModule,\n    AngularFireModule.initializeApp(firebaseConfig),\n\n    AngularFireDatabaseModule,\n    AngularFireStorageModule,\n    FormsModule\n\n  ],\n  providers:[AngularFirestore,CountriesService,AngularFireStorageModule,\n    AuthService,AuthGuard,AngularFireAuth\n  ],\n  exports: [RegistrationComponent,HomeComponent]\n})\nexport class VdoitModule { }\n"],"names":["firebase.auth","auth","firebase.firestore","firebase.initializeApp"],"mappings":"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"}
